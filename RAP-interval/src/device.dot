digraph PropertyInspectionSystem {
    rankdir=LR;
    node [shape=record];

    Device [label="{Device|+ id: String\l+ name: String\l+ device_type: String\l+ location: String\l+ purchase_date: DateTime\l+ warranty_period: Duration\l+ inspection_records: Vec<InspectionRecord>\l+ fault_records: Vec<FaultRecord>\l|+ getInspectionRecords(): Vec<InspectionRecord>\l+ getFaultRecords(): Vec<FaultRecord>\l}"];
    InspectionPlan [label="{InspectionPlan|+ id: String\l+ device: Device\l+ inspection_category: String\l+ inspection_period: Duration\l+ inspection_content: String\l|+ generateTasksForNextWeek(currentDate: DateTime): Vec<InspectionTask>\l}"];
    InspectionTask [label="{InspectionTask|+ id: String\l+ plan: InspectionPlan\l+ scheduled_date: DateTime\l+ inspector: Option<Worker>\l+ status: String\l+ result: Option<InspectionResult>\l|+ updateStatus(newStatus: String): void\l+ recordResult(result: InspectionResult): void\l}"];
    InspectionResult [label="{InspectionResult|+ inspection_date: DateTime\l+ device_status: String\l+ conclusion: String\l}"];
    Worker [label="{Worker|+ id: String\l+ name: String\l+ skills: Vec<String>\l+ tasks: Vec<InspectionTask>\l|+ getTasksForDate(date: DateTime): Vec<InspectionTask>\l+ addSkill(skill: String): void\l}"];
    FaultRecord [label="{FaultRecord|+ id: String\l+ device: Device\l+ reported_by: Worker\l+ report_date: DateTime\l+ status: String\l+ related_inspection: Option<InspectionTask>\l|+ closeFault(): void\l}"];

    Device -> InspectionPlan [label="1..*"];
    InspectionPlan -> InspectionTask [label="1..*"];
    InspectionTask -> Worker [label="0..1"];
    InspectionTask -> InspectionResult [label="0..1"];
    Device -> FaultRecord [label="1..*"];
    FaultRecord -> Worker [label="1"];
    FaultRecord -> InspectionTask [label="0..1"];
}
